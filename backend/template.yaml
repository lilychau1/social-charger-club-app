AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  social-charger-club

  Sample SAM Template for social-charger-club

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - Prod
    Description: "The environment for deployment"

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    Tracing: Active
    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON
  Api:
    TracingEnabled: true
Resources:
  EVChargingUsersTable: 
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: !Sub "${Environment}-EVCharging_Users"
      AttributeDefinitions: 
        - AttributeName: userId
          AttributeType: S
      KeySchema: 
        - AttributeName: userId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  EVChargingProducersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Environment}-EVCharging_Producers"
      AttributeDefinitions:
        - AttributeName: producerId
          AttributeType: S
      KeySchema:
        - AttributeName: producerId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  EVChargingConsumersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${Environment}-EVCharging_Consumers"
      AttributeDefinitions:
        - AttributeName: consumerId
          AttributeType: S
      KeySchema:
        - AttributeName: consumerId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello_world/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures:
      - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
  RegisterUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: register_user/
      Handler: app.lambda_handler
      Runtime: python3.13
      Architectures:
        - x86_64
      Events:
        RegisterUser:
          Type: Api
          Properties:
            Path: /register-user
            Method: post

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn
  RegisterUserApi:
    Description: API Gateway endpoint URL for Prod stage for Register User function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/register-user/"
  RegisterUserFunction:
    Description: Register User Lambda Function ARN
    Value: !GetAtt RegisterUserFunction.Arn
  RegisterUserFunctionIamRole:
    Description: Implicit IAM Role created for Register User function
    Value: !GetAtt RegisterUserFunctionRole.Arn